import{_ as i,M as o,p as l,q as c,R as n,t as s,N as a,a1 as t}from"./framework-fee247ae.js";const r={},d=n("h1",{id:"使用vuepress搭建博客站",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用vuepress搭建博客站","aria-hidden":"true"},"#"),s(" 使用VuePress搭建博客站")],-1),p=n("blockquote",null,[n("p",null,[s("前言：身为前端程序员的你，是不是因为需要构建庞大的前后端交互以及网页设计而有心无力！是不是需要自掏腰包购买云服务器让你心生退意！是不是复杂的Linux部署命令你望而却步！现在使用 "),n("strong",null,"VuePress"),s(" 帮助你轻松建博客站，解决你的烦恼吧！")])],-1),u=n("h3",{id:"vuepress初识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress初识","aria-hidden":"true"},"#"),s(" VuePress初识")],-1),v={href:"https://vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"v1.x",-1),m=n("strong",null,"v2.x",-1),g=n("strong",null,"v1.x",-1),b=n("code",null,"Vite",-1),_=n("code",null,"Webpack",-1),k=n("strong",null,"v1.x",-1),f=n("strong",null,"v2.x",-1),x=n("h3",{id:"开始搭建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开始搭建","aria-hidden":"true"},"#"),s(" 开始搭建")],-1),E=n("strong",null,"v2.x",-1),P={href:"https://v2.vuepress.vuejs.org/zh/guide/getting-started.html",target:"_blank",rel:"noopener noreferrer"},V=n("strong",null,"VuePress",-1),q=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 创建并进入一个新目录</span>
<span class="token function">mkdir</span> vuepress-starter
<span class="token builtin class-name">cd</span> vuepress-starter

<span class="token comment"># 2.初始化项目</span>
<span class="token function">git</span> init
<span class="token function">yarn</span> init

<span class="token comment"># 3. 将 VuePress 安装为本地依赖</span>
<span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> vuepress@next

<span class="token comment"># 4. 在 package.json 中添加一些 scripts</span>
<span class="token punctuation">{</span>
  <span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;docs:dev&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vuepress dev docs&quot;</span>,
    <span class="token string">&quot;docs:build&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vuepress build docs&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment"># 5. 将默认的临时目录和缓存目录添加到 .gitignore 文件中</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;node_modules&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&#39;.temp&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&#39;.cache&#39;</span> <span class="token operator">&gt;&gt;</span> .gitignore

<span class="token comment"># 6. 创建你的第一篇文档</span>
<span class="token function">mkdir</span> docs
<span class="token builtin class-name">echo</span> <span class="token string">&#39;# Hello VuePress&#39;</span> <span class="token operator">&gt;</span> docs/README.md

<span class="token comment"># 7. 在本地启动服务器来开发你的文档网站</span>
<span class="token function">yarn</span> docs:dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>如上步骤使用 <strong>yarn</strong> 构建，使用 <strong>npm</strong> 替换同理。若使用 <strong>pnpm</strong>，你可能会遇到一个麻烦。位于 <code>**/.temp/vite-root/index.html</code> 文件中 <code>import &#39;@vuepress/client/app&#39;</code> 这行代码将在启动时报错。</p></div>`,2),j=n("strong",null,"pnpm",-1),y={href:"https://pnpm.io/npmrc#shamefully-hoist",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,".pnpmrc",-1),A=n("code",null,"pnpm i",-1),R=t(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>shamefully-hoist=<span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加配置" tabindex="-1"><a class="header-anchor" href="#添加配置" aria-hidden="true">#</a> 添加配置</h3>`,2),B={href:"https://v2.vuepress.vuejs.org/zh/guide/configuration.html#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},G=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├─ docs
│  ├─ .vuepress
│  │  └─ config.js
│  └─ README.md
├─ .gitignore
└─ package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="github-pages部署" tabindex="-1"><a class="header-anchor" href="#github-pages部署" aria-hidden="true">#</a> GitHub Pages部署</h3>`,2),H=n("code",null,"home",-1),D=n("code",null,"navbar",-1),I=n("code",null,"sidebar",-1),M=n("code",null,"yarn docs:build",-1),z=n("code",null,".vuepress",-1),w=n("code",null,"dist",-1),L=n("strong",null,"GitHub Pages",-1),S=n("a",{href:"(https://pages.github.com/)"},"GitHub Pages",-1),W={href:"https://v2.vuepress.vuejs.org/zh/guide/deployment.html#github-pages",target:"_blank",rel:"noopener noreferrer"},C=t('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>配置完github actions文件后，即可提交代码至github仓库，此时你可以在actions tab内查看运行状态及日志。 一切正常后，进入settings下pages设置branch为gh-pages，并点击save保存即可访问。默认地址为：<code>https://&lt;USERNAME&gt;.github.io/&lt;REPO_NAME&gt;</code></p></div><p>若出现报错信息无权限将build后的dist文件夹 <code>push</code> 到 <code>gh-pages</code> 分支。请打开你的本项目GitHub仓库的<code>Setting</code>，找到左侧<code>Actions/General</code>中的<code>Workflow permissions</code>设置项。将默认的<code>Read repository contents permission</code>勾选换成<code>Read and write permissions</code>即可，这样之后你的Actions就具有写的权限了，重新执行<code>CI</code>，即可访问你的博客网站了💯。</p>',2);function T(O,U){const e=o("ExternalLinkIcon");return l(),c("div",null,[d,p,u,n("p",null,[s("打开 "),n("a",v,[s("VuePress官网"),a(e)]),s("，我们可以看到目前右上角VuePress版本号，目前官网默认"),h,s("，且最新版本"),m,s("已可选。相对于"),g,s("来说最大的优化即是新版本可配置选择使用"),b,s("或者"),_,s("构建，所以说启动速度基本秒开，比老版本快上不少。当然，"),k,s("也有他的优势：沉淀时间长，功能稳定，社区主题丰富等等。由于本人看到新的东西就想用😄，所以本博客仅演示"),f,s("版本搭建。")]),x,n("p",null,[s("选择"),E,s("版本后，跳转至"),n("a",P,[s("VuePress新版首页"),a(e)]),s("。按照官网提示几分钟即可构建一个"),V,s("应用。")]),q,n("p",null,[s("此问题属于"),j,s("默认机制问题 "),n("a",y,[s("点此查看"),a(e)]),s("，解决方法为需要在根目录添加一个 "),N,s(" 文件，并在文件中添加如下内容后，重新 "),A,s(" 即可。")]),R,n("p",null,[s("要想丰富你的博客站内容，添加配置文件是不可或缺的。你可能需要生成如下的目录结构。更多配置信息请查看"),n("a",B,[s("官方文档"),a(e)])]),G,n("p",null,[s("通过"),H,s("、"),D,s("、"),I,s("等配置，你的博客看起来越来越丰富了。这时你可以执行 "),M,s(" 来打包你的vuepress应用，执行结束将在"),z,s("下生成一个"),w,s("目录，其中包含的就是你的项目静态文件。这时的你陷入沉思🤔，不想买云服务器，不想搞linux，部在哪里可以让所有人看到？ "),L,s(" ！ 按照一定的步骤，你可以将你的静态网页部署到 "),S,s("上。 幸运的是，VuePress连GitHub Pages的"),n("a",W,[s("部署文档"),a(e)]),s("都准备好了，开始跟着文档傻瓜式操作即可。")]),C])}const J=i(r,[["render",T],["__file","index.html.vue"]]);export{J as default};
